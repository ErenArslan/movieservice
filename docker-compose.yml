version: '3.4'

services:


  movieservice.api:
    image: ${DOCKER_REGISTRY-}movieserviceapi
    build:
      context: .
      dockerfile: MovieService/MovieService.Api/Dockerfile
    ports:
     - "8000:80"
    depends_on:
      - rabbitmq
      - mongodb
      - redisdb
      - elasticsearch

  movieproviderservice:
    image: ${DOCKER_REGISTRY-}movieproviderservice
    build:
      context: .
      dockerfile: MovieProviderService/MovieProviderService/Dockerfile
    ports:
     - "8005:80"
    depends_on:
      - rabbitmq
      - mongodb
      - redisdb
      - elasticsearch
  
  notificationserviceapi:
    image: ${DOCKER_REGISTRY-}notificationserviceapi
    build:
      context: .
      dockerfile: NotificationService/NotificationService.Api/Dockerfile
    ports:
     - "8008:80"
    depends_on:
      - rabbitmq
   

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017 
    volumes:
     - mongodb-data:/data/db

  rabbitmq:
     image: rabbitmq:latest
     container_name: rabbitmq
     ports:
        - 15672:15672
          
           
  redisdb:
    image: "redis:alpine"
    container_name: redisdb
    ports:
     - "6379:6379"


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms128m -Xmx128m"

    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

volumes:
  mongodb-data:
    external: false
  elasticsearch-data:
    external: false
